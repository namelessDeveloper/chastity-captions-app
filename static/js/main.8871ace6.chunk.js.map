{"version":3,"sources":["style/index.ts","components/Item/styles.ts","components/Item/components/Image.tsx","components/Item/components/Text.tsx","components/Item/components/Title.tsx","components/Item/Item.tsx","components/Section/Section.tsx","lib/index.ts","hooks/index.ts","App.tsx","index.tsx"],"names":["theme","unaffordable","css","ItemWrapper","styled","div","p","affordable","direction","width","toggled","toggleColor","Image","src","style","height","styleCost","cost","minContent","Wrapper","noHeader","H4","h4","P","Text","body","header","undefined","dangerouslySetInnerHTML","__html","StyledTitle","color","Title","text","Item","data","onClick","useState","setToggled","parts","map","part","key","type","SectionWrapper","flexDirection","Section","handleClick","console","log","items","item","gist","filename","a","length","fetch","json","JSON","parse","files","content","Error","useCyoa","config","setConfig","pathname","useLocation","useEffect","substr","split","slice","getConfig","then","title","App","input","useRef","history","useHistory","className","sections","sect","htmlFor","ref","placeholder","push","current","value","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8871ace6.chunk.js","sourcesContent":["export const theme = {\n  plus: \"#44ca44\",\n  minus: \"red\",\n}","import styled, { css } from \"styled-components\"\nimport { Direction } from \"../../types\"\n\nconst unaffordable = css`\n  pointer-events: none;\n  & ::before {\n    background: black;\n    mix-blend-mode: saturation;\n  }\n`\n\ninterface ItemWrapperProps {\n  direction: string\n  width?: number\n  toggled: boolean\n  toggleColor: string\n  affordable: boolean\n}\n\nexport const ItemWrapper = styled.div<ItemWrapperProps>`\n  ${p => p.affordable ? \"\" : unaffordable}\n  display:flex;\n  flex-direction: ${p => p.direction};\n  // TODO min-width\n  min-width: ${p => p.width && p.width}px;\n  border: 5px solid ${p => p.toggled ? p.toggleColor : \"black\"};\n  border-radius: 1em;\n  & img {\n    border-top-left-radius: 0.5em;\n    border-top-right-radius: 0.5em;\n  }\n  padding: 1em;\n  cursor: pointer;\n  user-select: none;\n`","export const Image: React.FC<{src:string, width?:number}> = ({src, width = 200}) => {\n\n  return (\n    <img src={src} style={{width:`${width}px`, height: \"auto\"}} />\n  )\n}","import styled, { css } from \"styled-components\"\nimport { theme } from \"../../../style\"\n\nfunction styleCost(cost?: number){\n  if(cost){\n    if(cost > 0) return `<span style=\"color:${theme.plus}\">${cost}</span>`\n    if(cost < 0) return `<span style=\"color:${theme.minus}\">${cost}</span>`\n  }\n  return cost\n}\n\nconst minContent = css`\n  width: min-content;\n`\n\nconst Wrapper = styled.div<{noHeader: boolean}>`\n  ${p => p.noHeader ? \"\" : minContent}\n`\nconst H4 = styled.h4`\n  white-space: nowrap;\n`\nconst P = styled.p`\n`\n\nexport const Text: React.FC<{body?: string, header?: string, cost?: number}> = ({\n  body,\n  header,\n  cost,\n}) => {\n\n  \n  return (\n    <Wrapper noHeader={header == undefined}>\n      {header && <H4 dangerouslySetInnerHTML={{__html: `${header} [${styleCost(cost)}]`}}/>}\n      {body && <P dangerouslySetInnerHTML={{__html: body}}/>}\n    </Wrapper>\n  )\n}","import styled from \"styled-components\"\n\ninterface StyledProps {\n  color?: string\n}\n\nconst StyledTitle = styled.div<StyledProps>`\n  background-color: ${p => p.color || \"#a80eb6\"};\n  color: White;\n  font-weight: 700;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 1em;\n  border: 3px solid white;\n  border-radius: .5em;\n`\n\ninterface TitleProps extends StyledProps{\n  text:string\n  cost?: number\n}\n\nexport const Title: React.FC<TitleProps> = ({\n  text, color\n}) => {\n\n  return (\n    <StyledTitle color={color}>{text}</StyledTitle>\n  )\n}","import React, { useState } from \"react\"\nimport { theme } from \"../../style\"\nimport { Direction, Item as ItemInterface } from \"../../types\"\nimport { ItemWrapper } from \"./styles\"\n\nimport {\n  Image, Text, Title\n} from './components'\n\ninterface Props {\n  data:ItemInterface,\n  onClick?:(cost:number)=>void,\n}\n\nexport const Item: React.FC<Props> = ({\n  data,\n  onClick,\n}) => {\n\n  const [toggled, setToggled] = useState(false)\n\n  function handleClick(){\n    if(data.cost && onClick){\n      if(!toggled){\n        onClick(data.cost)\n        setToggled(true)\n      } else {\n        onClick(-data.cost)\n        setToggled(false)\n      }\n    }\n  }\n\n  return (\n    <ItemWrapper\n      toggled={toggled}\n      toggleColor={data.cost && data.cost > 0 ? theme.plus : theme.minus}\n      onClick={handleClick}\n      direction={data.direction || \"row\"}\n      width={data.width}\n      affordable={true} // TODO context points\n    >\n\n      {data.parts.map((part, key) => {\n        switch (part.type) {\n          case \"image\": return <Image key={key} src={part.src} width={part.width}/>    \n          case \"text\": return <Text key={key} cost={data.cost} body={part.body} header={part.header}/>\n          case \"title\": return <Title key={key} cost={data.cost} text={part.text} />\n          default: return null\n        }\n      })}\n    </ItemWrapper>\n  )\n}","import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { Direction, Section as SectionType } from \"../../types\"\n\nimport {Item} from '../'\n\nfunction flexDirection(direction?: Direction){\n  if(direction){\n    return css`flex-direction: ${direction};`\n  }\n}\n\nconst SectionWrapper = styled.div<{direction?: Direction}>`\n  display:flex;\n  ${p => flexDirection(p.direction)}\n  flex-wrap: wrap;\n`\n\ninterface Props {\n  data:SectionType\n}\n\nexport const Section: React.FC<Props> = ({data}) => {\n\n  const handleClick = data.type !== \"none\" \n    ? (cost:number) => console.log(cost)\n    : undefined\n\n  if(data.type == \"multiple\"){\n    return (\n      <SectionWrapper direction={data.direction}>\n        {data.items.map((item, key) => \n          <Item key={key} data={item} onClick={handleClick}/>\n        )}\n      </SectionWrapper>\n    )\n  }\n\n  if(data.type == \"single\"){\n    return (\n      <SectionWrapper direction={data.direction}>\n        {data.items.map((item, key) => \n          <Item key={key} data={item} onClick={handleClick}/>\n        )}\n      </SectionWrapper>\n    )\n  }\n\n  return (\n    <SectionWrapper direction={data.direction}>\n      {data.items.map((item, key) => \n        <Item key={key} data={item}/>\n      )}\n    </SectionWrapper>\n  )\n}","export async function getConfig(gist:string, filename?:string){\n  if(gist.length >= 30){\n    const data = await fetch(`https://api.github.com/gists/${gist}`)\n    const json = await data.json()    \n    console.log(json);\n    \n    return JSON.parse(json.files[filename || \"cyoa.json\"].content)\n  }\n  if(gist.length === 0){\n    return null\n  }\n  throw Error(\"Gist must be 32 characters long\")\n}","import { useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport { getConfig } from \"../lib\"\nimport { Config } from \"../types\"\n\nexport function useCyoa(){\n  const [config, setConfig] = useState<null | Config>(null)\n  const {pathname} = useLocation()\n\n  useEffect(() => {\n    // Path will be e.g. /cyoa-viewer/f728c844cd509bd87b5edaff8c15be2b\n    const [gistID, filename] = pathname.substr(1).split('/').slice(1)\n    getConfig(gistID, filename)\n      .then(json => {\n        if(json){\n          setConfig(json)\n          console.log(`Loaded \"${json?.title}\"`)\n        }\n      })\n  }, [pathname])\n  return config\n}","import {\n  Config,\n  selectionType,\n} from './types';\n\nimport {Section} from './components'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { PointProvider, initialState } from './contexts';\nimport { useCyoa } from './hooks';\n\n\n\n\n\nfunction App() {\n  const config = useCyoa()\n  // const config = jsonConfig\n  const input = useRef<HTMLInputElement>(null)\n  const history = useHistory()\n  \n  /* eslint-disable react-hooks/rules-of-hooks*/\n  if(process.env.NODE_ENV == 'development'){\n    useEffect(() => {\n      if(input.current)\n        //https://gist.github.com/namelessDeveloper/f728c844cd509bd87b5edaff8c15be2b\n        input.current.value = \"f728c844cd509bd87b5edaff8c15be2b\"\n    }, [input])\n  }\n  /* eslint-enable react-hooks/rules-of-hooks*/\n\n  if(config !== null && config.type == \"cyoa\"){\n    return (\n      <div className=\"App\">\n        {config.sections.map((sect, key) => \n        //@ts-ignore\n          <Section data={sect} key={key}/>\n        )}\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"\">Load a config from a github gist:</label>\n      <input ref={input} type=\"text\" placeholder=\"gistID\"/>\n      <button onClick={() => history.push(input.current?.value || \"\")}>Load</button>\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {BrowserRouter} from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background:  black;\n    color: white;\n    font-family: sans-serif;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <GlobalStyle/>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}